/*
 * money-transfer simulation
 * money-transfer simulation restful api
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.moneytransfer.service;

import io.moneytransfer.model.Account;
import io.moneytransfer.model.Transfer;
import io.moneytransfer.model.User;
import io.moneytransfer.store.InMemoryStore;
import io.moneytransfer.validation.transfer.BalanceValidation;
import io.moneytransfer.validation.transfer.TransferValidation;

import javax.inject.Inject;
import javax.inject.Singleton;
import javax.ws.rs.core.Response;

@Singleton
public class TransferService {

    @Inject private TransferValidation transferValidation;
    @Inject private UserFetchService userFetchService;
    @Inject private AccountService accountService;
    @Inject private BalanceValidation balanceValidation;
    @Inject private BalanceService balanceService;
    @Inject private InMemoryStore inMemoryStore;


    public Response transaction(Transfer transfer) {
        transferValidation.validate(transfer);
        User debitUser = userFetchService.getUser(transfer.getDebitUserId());
        Account debitAccount = accountService.getAccount(debitUser.getId(), transfer.getDebitAccountId());
        balanceValidation.validateDebit(debitAccount, transfer.getAmount());

        User creditUser = userFetchService.getUser(transfer.getCreditUserId());
        Account creditAccount = accountService.getAccount(creditUser.getId(), transfer.getCreditAccountId());
        balanceValidation.validateCredit(creditAccount, transfer.getAmount());

        balanceService.settle(debitAccount, creditAccount, transfer.getAmount());
        return Response.ok().build();
    }
}
