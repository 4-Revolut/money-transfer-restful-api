/*
 * money-transfer simulation
 * money-transfer simulation restful api
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.moneytransfer.validation.transfer;

import io.moneytransfer.api.ApiResponse;
import io.moneytransfer.model.Transfer;

import javax.inject.Singleton;
import javax.validation.ConstraintViolation;
import javax.validation.Validation;
import javax.validation.Validator;
import javax.validation.ValidatorFactory;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.Response;
import java.util.Set;

import static io.moneytransfer.constants.MiscConstants.ERROR_RESPONSE_TYPE;
import static javax.ws.rs.core.HttpHeaders.CONTENT_TYPE;
import static javax.ws.rs.core.MediaType.APPLICATION_JSON;
import static javax.ws.rs.core.Response.Status.BAD_REQUEST;
import static javax.ws.rs.core.Response.status;

@Singleton
public class TransferValidation {

    private final ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
    private final Validator validator = factory.getValidator();

    public void validate(Transfer transfer) {
        if (transfer == null) {
            throw new WebApplicationException(
                    Response
                            .status(BAD_REQUEST)
                            .header(CONTENT_TYPE, APPLICATION_JSON)
                            .entity(new ApiResponse(ERROR_RESPONSE_TYPE, "Provide transfer details as json entity"))
                            .build());
        }
        Set<ConstraintViolation<Transfer>> violations = validator.validate(transfer);
        if (violations.size() > 0) {
            throw new WebApplicationException(
                    status(BAD_REQUEST)
                            .entity(new ApiResponse(ERROR_RESPONSE_TYPE, violations.stream().findFirst().get().getMessage()))
                            .header(CONTENT_TYPE, APPLICATION_JSON)
                            .build());
        }
    }
}
